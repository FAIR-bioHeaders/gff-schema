type GenomeBuildValue
  {
    source: String
    name: String
    species: String
  }

type GenomeFeature
  {
    seqid: String!
    source: String!
    type: ControlledTermType
    strand: StrandEnum
    start: Integer!
    end: Integer!
    phase: Integer
    hasAttributes: GenomeFeatureAttributeSet
  }

type GenomeFeatureAttributeSet
  {
    iD: Uriorcurie!
    name: String
    parent: [GenomeFeature]
    ontologyTerm: [ControlledTermType]
  }

type GffDocument
  {
    gffVersion: String
    featureOntologyURI: [Uriorcurie]
    attributeOntologyURI: [Uriorcurie]
    sourceOntologyURI: [Uriorcurie]
    species: Uriorcurie
    sequenceRegion: SequenceRegionValue
    genomeBuild: GenomeBuildValue
    sequences: [Seq]
    features: [GenomeFeature]
  }

interface Metadata
  {
  }

type Seq
  {
    iD: Uriorcurie!
    hasSequenceString: SequenceEnum
  }

type SequenceRegionValue
  {
    seqid: String!
    start: Integer!
    end: Integer!
  }


